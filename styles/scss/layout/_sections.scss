@use '../abstracts/mixins' as *;

main {
  overflow-x: hidden;
}

// Hero Section
.hero {
  @include flex(column, center, center, 3rem);
  @include center;
  // Overwriting margin inline from center mixin to padding
  margin-inline: 0;
  padding-inline: 1.5rem;
  overflow-x: hidden;
  text-align: center;

  margin-bottom: 10rem;

  &__img {
    width: 150%;
    align-self: start;
  }

  &__text {
    max-width: 303px;

    h1 {
      margin-bottom: 0.75rem;
    }
    p {
      margin-bottom: 2rem;
      font-size: 17px;
    }
  }
}

@include media(medium) {
  .hero {
    flex-direction: row-reverse;
    text-align: start;
    margin-top: 6rem;
    margin-bottom: 15rem;
    overflow: visible;

    &__text {
      max-width: 1000px;

      p {
        max-width: 480px;
        font-size: 20px;
        margin-bottom: 2.5rem;
      }
    }

    &__img {
      width: 80%;
      align-self: center;
      
      img {
        transform: scale(1.5) translateX(clamp(3.5rem, 6vw ,5rem));
      }
    }
  }
}

// Api Section
.api {
  background-color: var(--clr-gray-000);
  form {
    @include flex(column, center, center, 1rem);
    @include center;
    background: url(/images/bg-shorten-mobile.svg) no-repeat right top, var(--clr-violet);
    border-radius: 10px;
    padding: 1.25rem;

    transform: translateY(-5rem);

    input {
      width: 100%;
      height: 48px;

      border: none;
      border-radius: 5px;
      padding: 0.6rem 1rem;
  
      color: var(--clr-gray-300);
      font-weight: var(--fw-500);

      &::placeholder {
        color: var(--clr-gray-200);
        font-weight: var(--fw-500);
      }

      &.error {
        border: 2px solid var(--clr-red);

        &::placeholder {
          color: var(--clr-red-transparent);
        }
      }
    }
    
    .errorMessage {
      display: none;

      &.error {
        display: block;
        position: absolute;
        top: 3.9rem;
        left: 1.4rem;

        color: var(--clr-red);
        font-size: 10px;
        font-style: italic;
      }
    }

    button {
      width: 100%;
      height: 48px;
      font-size: 19px;
    }
  }

  ul {
    @include flex(column, center, center, 2rem);
    @include center;
    transform: translateY(-3rem);

    li {
      @include flex(column, center, start, 1rem);
      border-radius: 10px;
      padding: 0.75rem;

      width: 100%;

      background-color: white;

      overflow: hidden;

      position: relative;

      &::after {
        content: '';
        position: absolute;
        width: 100%;
        right: 0;
        left: 0;
        top: 3rem;

        background-color: var(--clr-gray-100);
        height: 1px;
      }

      .input {
        color: var(--clr-gray-400);
        max-width: 74vw;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
      }

      .output-and-button {
        @include flex(column, center, start, 0.5rem);
        width: 100%;

        .output {
          color: var(--clr-cyan);
          max-width: 74vw;
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
        }
  
        button {
          width: 100%;
        }
      }
    }
  }
}

@include media(medium) {
  .api {
    form {
      flex-direction: row;
      background: url(/images/bg-shorten-desktop.svg) no-repeat right top, var(--clr-violet);
      background-size: cover;
      margin-inline: 1.5rem;
      padding: 2rem 2.75rem;
      
      input {
        padding: 1.2rem 2rem;
        height: 55px;
        border-radius: 7.5px;
      }

      .errorMessage.error {
        top: 5.4rem;
        left: 2.8rem;
        font-size: 12px;
      }

      button {
        width: 40%;
        height: 55px;
      }
    }
    ul {
      margin-inline: 1.5rem;

      li {
        @include flex(row, space-between, center);
        padding: 0.9rem 1.35rem;

        .input, .output {
          font-size: 18px;
        }

        .output-and-button {
          @include flex(row, center, center, 1.25rem);
          width: fit-content;
          padding-left: 3rem;

          button {
            width: 122px;
          }
        }

        &::after {
          display: none;
        }
      }
    }
  }
}

@media (min-width: 1250px) {
  .api {
    form {
      @include center;
      padding: 2.75rem 3.5rem;

      .errorMessage.error {
        top: 6.2rem;
        left: 3.5rem;
        font-size: 14px;
      }
    }

    ul {
      @include center;
    }
  }
}

// Info section
.info {
  @include flex(column, center, center, 3rem);
  background-color: var(--clr-gray-000);

  &__title {
    @include center;
    text-align: center;
    max-width: 330px;
    margin-bottom: 3rem;

    h2 {
      margin-bottom: 1rem;
    }
  }

  &__cards {
    @include flex(column, center, center, 5rem);
    @include center;
    text-align: center;
    margin-bottom: 4.5rem;

    position: relative;

    &::before {
      content: '';
      position: absolute;
      width: 8px;
      height: 100%;
      background-color: var(--clr-cyan);
    }

    .card {
      position: relative;
      display: flex;
      flex-direction: column;
      align-items: center;
      text-align: center;
      gap: 0.9rem;

      background-color: white;
      border-radius: 5px;
      padding-inline: 1.5em;
      padding-top: 4.4em;
      padding-bottom: 2.4em;

      max-width: 327px; 

      .img {
        background-color: var(--clr-violet);
        border-radius: 999px;
        padding: 1.3em;
        position: absolute;
        top: -2.7rem;
      }

      p {
        font-size: 14px;
        line-height: 1.5rem;
      }
    }
  }  
}

@include media(medium) {
  .info {
    &__title {
      max-width: 460px;
    }
  }
}

@include media(large) {
  .info {
    padding-top: 4rem;
    padding-bottom: 8rem;
    gap: 6rem;

    &__cards {
      flex-direction: row;
      gap: clamp(1rem, 3vw, 2.5rem);

      &::before {
        width: 100%;
        height: 8px;
      }

      .card {
        align-items: start;
        text-align: start;
        padding-inline: 2rem;

        &:first-child {
          transform: translateY(-2rem);
        }

        &:last-child {
          transform: translateY(2rem);
        }
      }
    }
  }
}